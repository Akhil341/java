//#include<SoftwareSerial.h>
#include<Wire.h>
//#include <stdlib.h>
//#include <NewPing.h>
//#include<SoftwareSerial.h>
#include<LiquidCrystal_I2C.h>
#include "DHT.h"

LiquidCrystal_I2C lcd(0x27,16,2);
#define DHTPIN 7
int trigPin =  4 
 int echoPin =    3 
#define MAX_DISTANCE 200
#define DHTTYPE DHT11

DHT dht(DHTPIN, DHTTYPE);
//NewPing sonar(TRIGGER_PIN, ECHO_PIN, MAX_DISTANCE);

//SoftwareSerial ser(2,3);

//String apiKey ="87Q4JP29LRGUEYJV";
float humid;
//int count = 0;
void setup() {
  // put your setup code here, to run once:
  dht.begin();
  Serial.begin(9600);
  
  Wire.begin();
  lcd.backlight();
  lcd.init();
 
  lcd.setCursor(0,0);
  lcd.print("H:");
  
  lcd.setCursor(8,0);
  lcd.print("T:");

  lcd.setCursor(0,1);
  lcd.print("S:");

  lcd.setCursor(8,1);
  lcd.print("U:");

   pinMode(echoPin, INPUT);
    pinMode(trigPin, OUTPUT);
  pinMode(13,OUTPUT);
  digitalWrite(13,LOW);
  
  pinMode(9,OUTPUT);
  digitalWrite(9,LOW);
}
void loop() {
  // put your main code here, to run repeatedly:
  float h = dht.readHumidity();                                              // Reading temperature or humidity takes about 250 milliseconds!
  float t = dht.readTemperature();                                           // Read temperature as Celsius (the default)
    
  if (isnan(h) || isnan(t)) {                                                // Check if any reads failed and exit early (to try again).
    Serial.println(F("Failed to read from DHT sensor!"));
    return;
  }
  
  Serial.print("Humidity: ");  
  Serial.print(h);
  Serial.print("Temperature: ");  
  Serial.print(t);
  delay(2);
 
  lcd.setCursor(2,0);
  lcd.print((int)humid);
  lcd.print("  ");
  
  lcd.setCursor(10,0);
  lcd.print(t);
  lcd.print("  ");

  int soil=analogRead(0);
  
  lcd.setCursor(3,1);
  lcd.print(soil);
  //lcd.print("");
 digitalWrite(trigPin, LOW);
  delayMicroseconds(5);
  digitalWrite(trigPin, HIGH);
  delayMicroseconds(10);
  digitalWrite(trigPin, LOW);
 
  // Read the signal from the sensor: a HIGH pulse whose
  // duration is the time (in microseconds) from the sending
  // of the ping to the reception of its echo off of an object.
 
int duration = pulseIn(echoPin, HIGH);
 
  // Convert the time into a distance
  int cm = (duration/2) / 29.1;     // Divide by 29.1 or multiply by 0.0343
  int inches = (duration/2) / 74; 
  Serial.print(cm);
  delay(1000);
  if (cm < 20)
  {
    digitalWrite(13,HIGH);
    
  }
  else if(cm > 120)
  {
  
    digitalWrite(13, LOW);
    
  }
  lcd.setCursor(10,1);
  lcd.print(cm);
  lcd.print("  ");
  delay(1000);

  if(soil < 1050)
  {
    digitalWrite(9, HIGH);
  }
  else
  {
    digitalWrite(9, LOW);
    
  }

  
}